
변수란? 숫자와 문자, 같은 값들을 저장하는 공간
일반적인 RPG 게임을 예시로 들었을 때 실시간으로 변화하는 캐릭터의 레벨, 체력, 공격력, 방어력 같은
수치들을 제대로 저장하고 있지 않다면 갑자기 체력이 0이 되어있다든지,
공격력이 -1로 되어있어서 공격했을 때 오히려 체력을 회복한다든지 그런 황당한 일이 발생할 수도 있다.
이러한 일들이 생기지 않기 위해서 프로그램을 구성하고 있는 값들을 변수에 저장한다.

-----------------------------------------------------------------------------------------------------

변수를 만드는 법
1. 만들 변수의 자료형을 정해주어야 한다.
2. 변수에는 이름이 필요하다. 따라서 적절한 이름을 정해 선언한다.
3. = 을 이용해서 적절한 값을 대입해준다.
4. 변수는 "변화할 수 있는 수"라는 뜻을 지니고 있고 대입을 통해 언제든지 값을 변화시킬수 있다.
5. 변수를 먼저 선언 후 값을 대입할 수도 있고, 변수를 선언하면서 동시에 대입할 수 있다.
   선언과 동시에 값을 대입하는 것을 초기화라 한다.

-----------------------------------------------------------------------------------------------------

같다라는 의미를 쓸 때는 == 사용
값을 대입할 때는 = 사용

-----------------------------------------------------------------------------------------------------

자료형(Data Type)이란 변수의 종류를 의미한다.
변수에 값을 담기 이전에, 정수, 실수, 문자, 문자열 등 어떤 값들을 지닐수 있는지 자료형을 미리 정해주어야 한다.

-----------------------------------------------------------------------------------------------------

정수형:
char 		1바이트 		-128이상 +127이하
short		2바이트		-32,768이상 +32,767이하
int			4바이트		-2,147,483,648이상 +2,147,483,647이하
long		4바이트		-2,147,483,648이상 +2,147,483,647이하
long long	8바이트		-9,223,372,036,854,775,808이상 +9,223,372,036,854,775,807이하

실수형:
float		4바이트		+-3.4x10^-37이상 +-3.4x10^38이하
double		8바이트		+-1.7x10^-37이상 +-3.4x10^38이하
long double	8바이트이상		double 이상의 표현범위

부호가 있는 변수	signed		기본(default)형식
부호가 없는 변수	unsigned	음수를 표현할 수 없고, 양수 값의 표현범위가 두배 정도 늘어남

-----------------------------------------------------------------------------------------------------

위 내용은 각 자료형에 대한 명칭과 크기 그리고 표현할 수 있는 값의 범위를 나타낸것.

-----------------------------------------------------------------------------------------------------

정수형은 char은 정수와 문자를 표시할 때에 사용되고 short, int, long, long long는 정수,
즉 숫자를 나타낼 때 사용된다.
각각의 차이점은 "좀 더 크거나 작은 숫자를 표시할 수 있다"라고 이해하면 된다.

실수형은 float, double, long double 순으로 좀 더 큰 숫자, 많은 소수점을 나타낼 수 있다.

정수형의 경우 signed(부호 있는 변수), unsigned(부호 없는 변수)로 나뉘어지는데
signed의 경우에는 음수와 양수 둘다 표현이 가능하고,
unsigned의 경우에는 양수만을 표현할 수 있는 대신에 범위가 약 2배 정도 늘어난다.

예를 들면, short(signed short)의 경우에는 표현 범위가 -32,768 ~ 32,767 까지지만,
unsigned short의 경우에는 음수를 제외하고 0~65,535까지 표현이 가능하다.

실수형의 경우에는 unsigned가 존재하지 않는다.

자료형의 크기를 바이트로 표현하는 것을 볼 수 있는데, 바이트 이전에 비트의 개념에 대해 알아야 한다.
비트는 컴퓨터가 처리할 수 있는 데이터의 최소 단위로, 하나의 비트는 0 혹은 1의 값을 가지고 있다.
하나의 비트로는 표현할 수 있는 영역이 0과 1밖에 없으므로 값을 표현하기 위해 비트 8개가 모여 만들어진 것이 바이트이다.
비트 8개가 모이면 이진수를 이용하여 값을 2의 7승인 128개의 양수와 128개의 음수를 만들수 있는데,
양수는 0부터 127까지 128개로 이루어지고, 음수는 -1부터 -128까지 표현할 수 있다.

-----------------------------------------------------------------------------------------------------

숫자를 저장할 때엔 해당 자료형의 영역만큼의 영역을 사용할 수 있다.
문자의 경우 1바이트는 영문자, 숫자, 특수문자 한 글자를 저장할 수 있을 정도의 크기이고,
2바이트는 1바이트로는 처리하기 어려운 한글, 일어, 중국어 등의 문자 하나를 저장할 수 있는 크기이다.

------------------------------------------------------------------------------------------------

C언어 형식 지정자(C language format specifier) 검색해 보자.

자료형			형식지정자		설명
int				%d		부호 있는 10진 정수
unsigned int	%u		부호 없는 10진 정수(0~4,294,967,295)
float, double	%f		부호 있는 10진 정수
char			%c		단일 문자 및 부호 있는 10진 정수(-128~127)
unsigned char	%hhu	부호 없는 10진 정수(0~255)
char[]			%s		문자열

------------------------------------------------------------------------------------------------



