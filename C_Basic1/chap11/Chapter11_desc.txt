Ak.....네트워크 문제로 전부 날렸다.

조건문이란 이름 그대로 "조건"을 따지는 제어문입니다.
C언어를 배우고 프로그램을 만들 때 반복문과 함께 필수적이라고 할 수 있지요.

지금까지는 무조건 순차적으로 프로그램을 실행해왔습니다.
중간에 빠지는 코드 없이, 코드를 작성하면 모든 코드들이 순차적으로 실행되었지요.
하지만 조건문을 사용하면 특정 조건에서는 특정 코드만 실행하게 할 수 있습니다.
이 조건문에는 if문과 switch문이 있는데, 먼저 if문에 대해 알아보겠습니다.

if문은 가장 기본적인 조건문입니다.
if, else if, else로 구성되며 특정 조건을 만족하면 if문을 실행하는 형태로 구성됩니다.

학점을 계산하는 프로그램을 예로 들어보겠습니다.
시험 성적을 입력받은 후 90점 이상은 A, 80점 이상은 B, 70점 이상은 C, 나머지는 D를 준다고 해봅시다.
여기서 "90점 이상", "80점 이상"과 같은 조건을 확인해야할 필요가 있습니다.
그리고 A, B와 같이 조건마다 내용을 다르게 해야겠지요.
이렇게 조건을 확인해서 실행을 다르게 하는것이 조건문입니다.
조건문에는 논리연산자와 관계연산자를 많이 사용하므로, 기억이 잘 나지 않는 분들은 한번 더 복습해주세요.

조건문은 흐름 제어문 중 하나로 조건에 따라서 참과 거짓을 계산하고,
결과에 맞게 각기 다른 코드를 실행시켜주는 역할을 합니다.

참: 널문자(NULL, \0, 0)가 아닌것, 논리나 관계가 참인 것
거짓: 널 문자인 것, 논리나 관계가 거짓인 것

두개 이상의 조건을 사용하고 싶을 때는 else if를 사용하면 됩니다.

c언어는 절차지향언어이기 때문에 순서대로 조건문을 체크하는데, 먼저 if문을 확인하고 그 조건에 맞지 않으면
아래에 있는 else if조건을 확인합니다.
이렇게 차례차례 조건을 확인한 후 모든 조건에 맞지 않으면 else문을 실행합니다.
만약 else문이 없다면 아무것도 실행하지 않겠지요.

또한 주의할 점은 위에서 만족하는 조건이 있다면 아래에 있는 else if문과 else문은 바로 건너뛰게 된다는 것입니다.
하지만 else if문이 아니라 if문을 여러개 썻다면 위 조건을 만족해도 아래 조건을 확인합니다.

따라서 조건이 중첩되는 경우, else if문을 적절히 이용해주어야 합니다.
또한 모든 조건을 확인하는 것보다 else if문을 사용해서 조건 확인 시간을 줄이는 것이 프로그램의 성능에도 더욱 좋겠지요.

-----------------------------------------------------------------------------------------------------

break와 continue는 반복문과 관련있는 제어문이다.
하지만 거의 대부분 조건문과 함께쓰인다.

break는 영어로 부수다, 깨다 라는 의미를 가지고 있는데, 이 의미와 비슷한 일을 합니다.
바로 반복문을 빠져 나오는 일이죠.
반복문을 부순다고 볼 수 있습니다.
break를 사용하지 않으면 for문이나 while문 같은 반복문은 종결조건이 될때까지 계속해서 반복문을 돌게 됩니다.
하지만 이 break를 이용하면, 종결조건을 만족하지 않았는데도 반복문을 빠져나올 수 있습니다.
조건문과 함께 쓰이다 보니 조건문을 빠져 나오는 것처럼 헷갈리시는 분들도 있는데,
조건문이 아니라 반복문을 빠져 나온다는것! 주의해주세요.

continue는 영어로 계속하다 라는 의미를 가지고 있는데, 마찬가지로 반복문을 계속 진행하는 역할을 합니다.
"계속한다는 건 그냥 그대로 코드를 진행하는 것 아닌가요?"라고 생각할 수 있지만,
이 "계속"이라는 의미는 아래 코드를 생략하고 다음 반복을 실행한다는 의미입니다.

continu는 어떤 특정 조건을 제외시킬때 사용하는데,
if문에 들어와서 continue를 만나면 바로 아래코드는 무시하고 다음 반복문을 실행합니다.

이처럼 break와 continue는 반복문을 사용할 때 여러 조건들을 체크하기 위해 유용하게 사용할 수 있습니다.

-----------------------------------------------------------------------------------------------------

조건문에는 if문 말고도 switch문이 있습니다.
제한적인 상황에서만 쓸 수 있기 때문에 if문이 더 많이 쓰이기는 하지만, switch문도 알아두면 좋으니 공부해보도록 합시다.
switch문은 if문과 마찬가지로 조건을 체크하고 그 케이스를 실행합니다.
단, if문처럼 관계식을 쓰지는 못하고 특정한 정수값이나 문자만을 확인할 수 있습니다.
실수값의 경우 오류가 발생하게 됩니다.

또한 if문처럼 하나하나 조건을 체크하면서 내려가는 것이 아니라, 입력받은 값의 케이스로 바로 이동하게 됩니다.
그렇기 때문에 if문보다 빠릅니다.
(일반적으로 4개이상의 조건일 때 switch문을 사용하면 성능이 더 좋다고 합니다.
이것은 어셈블리쪽 코드 상의 차이이지만 깊게 알 필요는 없습니다)
하지만 요즘에는 컴파일러가 많이 발전했기 때문에 switch문과 if문의 성능차이가 크게 차이 나지 않으므로,
상황에 따라 알맞은 것으로 선택하면 됩니다.
